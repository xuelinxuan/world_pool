name: CI

permissions:
  id-token: write #常见于部署到云，比如 AWS
  contents: read

on:
  push:
    paths:
      - 'dags/**'
  pull_request:
    branches:
      - main
    #   - dev
    #   - production
    # types: [ opened, reopened, edited, synchronize ]
  workflow_dispatch:  #手动触发
############################################################ python/sql/json ############################################################
jobs:
  test_code:
    name: I.test_code
    runs-on: ubuntu-latest
    steps:
    - name: 0.Check out Git repository
      uses: actions/checkout@v4

    - name: 1.Setup uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: 3.11
    
    - name: 2.Install Python dependencies
      run: |
        uv pip install -r requirements.txt
        uv run pip check
              
      #代码逻辑 
    - name: 3.Flake8
      run: flake8 --ignore E501 dags --benchmark -v

      #代码格式
    - name: 4.pytest-black 
      run: pytest dags --black -v
        
    - name: 5.Lint SQL with SQLFluff
      run: |
        pushd dags || exit
        sqlfluff lint \
          --dialect redshift \
          --ignore parsing,templating \
          --format github-annotation \
          --disable_progress_bar \
          sql_redshift/ || exit 1
        sqlfluff lint \
          --dialect hive \
          --ignore parsing,templating \
          --format github-annotation \
          --disable_progress_bar \
          sql_data_lake/ || exit 1
        popd || exit
        
    - name: 6.Validate JSON
      run: |
        python -m json.tool \
          airflow_variables/variables.json || exit 1

############################################################ airflow ############################################################

  test-dags:
    name: II.Test Airflow DAGs 
    runs-on: ubuntu-latest
    steps:
      - name: 1.Check out Git repository
        uses: actions/checkout@v2

      - name: 2.Setup uv  #一个比 pip 更快的 Python 包管理工具
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.11
          
      - name: 3.Install uv + airflow
        run: |
          AF=2.9.3
          PY=3.11
          CONSTRAINT="https://raw.githubusercontent.com/apache/airflow/constraints-${AF}/constraints-${PY}.txt"
          uv pip install "apache-airflow==${AF}" --constraint "$CONSTRAINT"
          uv pip install -r requirements.txt --constraint "$CONSTRAINT"
  
      - name: 4.Test Airflow DAGs
        run: |
          export AIRFLOW_HOME=/tmp
          export PYTHONPATH="$PWD/dags"   # 保证文件读取的指定路径
          uv run airflow db migrate #把uv装的东西放到 指定的地方
          uv run pytest

